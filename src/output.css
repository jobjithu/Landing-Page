/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.bottom-0 {
  bottom: calc(var(--spacing) * 0);
}
.container {
  width: 100%;
  @media (width >= 40rem) {
    max-width: 40rem;
  }
  @media (width >= 48rem) {
    max-width: 48rem;
  }
  @media (width >= 64rem) {
    max-width: 64rem;
  }
  @media (width >= 80rem) {
    max-width: 80rem;
  }
  @media (width >= 96rem) {
    max-width: 96rem;
  }
}
.mx-4 {
  margin-inline: calc(var(--spacing) * 4);
}
.mx-32 {
  margin-inline: calc(var(--spacing) * 32);
}
.mx-auto {
  margin-inline: auto;
}
.mt-3 {
  margin-top: calc(var(--spacing) * 3);
}
.mt-4 {
  margin-top: calc(var(--spacing) * 4);
}
.mt-6 {
  margin-top: calc(var(--spacing) * 6);
}
.mt-10 {
  margin-top: calc(var(--spacing) * 10);
}
.mt-12 {
  margin-top: calc(var(--spacing) * 12);
}
.mb-1 {
  margin-bottom: calc(var(--spacing) * 1);
}
.mb-3 {
  margin-bottom: calc(var(--spacing) * 3);
}
.mb-4 {
  margin-bottom: calc(var(--spacing) * 4);
}
.mb-6 {
  margin-bottom: calc(var(--spacing) * 6);
}
.mb-10 {
  margin-bottom: calc(var(--spacing) * 10);
}
.mb-19 {
  margin-bottom: calc(var(--spacing) * 19);
}
.ml-2 {
  margin-left: calc(var(--spacing) * 2);
}
.ml-4 {
  margin-left: calc(var(--spacing) * 4);
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.table {
  display: table;
}
.h-6 {
  height: calc(var(--spacing) * 6);
}
.h-10 {
  height: calc(var(--spacing) * 10);
}
.h-16 {
  height: calc(var(--spacing) * 16);
}
.h-40 {
  height: calc(var(--spacing) * 40);
}
.h-60 {
  height: calc(var(--spacing) * 60);
}
.h-80 {
  height: calc(var(--spacing) * 80);
}
.h-96 {
  height: calc(var(--spacing) * 96);
}
.w-1 {
  width: calc(var(--spacing) * 1);
}
.w-1\/2 {
  width: calc(1/2 * 100%);
}
.w-1\/3 {
  width: calc(1/3 * 100%);
}
.w-1\/4 {
  width: calc(1/4 * 100%);
}
.w-6 {
  width: calc(var(--spacing) * 6);
}
.w-10 {
  width: calc(var(--spacing) * 10);
}
.w-14 {
  width: calc(var(--spacing) * 14);
}
.w-16 {
  width: calc(var(--spacing) * 16);
}
.w-40 {
  width: calc(var(--spacing) * 40);
}
.w-80 {
  width: calc(var(--spacing) * 80);
}
.w-full {
  width: 100%;
}
.border-collapse {
  border-collapse: collapse;
}
.-translate-x-1 {
  --tw-translate-x: calc(var(--spacing) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-4 {
  --tw-translate-x: calc(var(--spacing) * -4);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-5 {
  --tw-translate-x: calc(var(--spacing) * -5);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-10 {
  --tw-translate-x: calc(var(--spacing) * -10);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-14 {
  --tw-translate-x: calc(var(--spacing) * -14);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-14\.5 {
  --tw-translate-x: calc(var(--spacing) * -14.5);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-15 {
  --tw-translate-x: calc(var(--spacing) * -15);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-16 {
  --tw-translate-x: calc(var(--spacing) * -16);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-18 {
  --tw-translate-x: calc(var(--spacing) * -18);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-20 {
  --tw-translate-x: calc(var(--spacing) * -20);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-x-1 {
  --tw-translate-x: calc(var(--spacing) * 1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-3 {
  --tw-translate-y: calc(var(--spacing) * 3);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-4 {
  --tw-translate-y: calc(var(--spacing) * 4);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-5 {
  --tw-translate-y: calc(var(--spacing) * 5);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.resize {
  resize: both;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.items-end {
  align-items: flex-end;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.gap-2 {
  gap: calc(var(--spacing) * 2);
}
.gap-4 {
  gap: calc(var(--spacing) * 4);
}
.gap-12 {
  gap: calc(var(--spacing) * 12);
}
.space-y-2 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-6 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-x-6 {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.rounded-2xl {
  border-radius: var(--radius-2xl);
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-0 {
  border-style: var(--tw-border-style);
  border-width: 0px;
}
.border-4 {
  border-style: var(--tw-border-style);
  border-width: 4px;
}
.border-dashed {
  --tw-border-style: dashed;
  border-style: dashed;
}
.border-indigo-300 {
  border-color: var(--color-indigo-300);
}
.bg-amber-300 {
  background-color: var(--color-amber-300);
}
.bg-gray-300 {
  background-color: var(--color-gray-300);
}
.bg-gray-400 {
  background-color: var(--color-gray-400);
}
.bg-green-300 {
  background-color: var(--color-green-300);
}
.bg-green-400 {
  background-color: var(--color-green-400);
}
.bg-indigo-500 {
  background-color: var(--color-indigo-500);
}
.p-10 {
  padding: calc(var(--spacing) * 10);
}
.px-6 {
  padding-inline: calc(var(--spacing) * 6);
}
.py-2 {
  padding-block: calc(var(--spacing) * 2);
}
.py-10 {
  padding-block: calc(var(--spacing) * 10);
}
.pt-32 {
  padding-top: calc(var(--spacing) * 32);
}
.pr-2 {
  padding-right: calc(var(--spacing) * 2);
}
.pr-20 {
  padding-right: calc(var(--spacing) * 20);
}
.text-center {
  text-align: center;
}
.text-2xl {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
.text-3xl {
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
}
.text-4xl {
  font-size: var(--text-4xl);
  line-height: var(--tw-leading, var(--text-4xl--line-height));
}
.text-5xl {
  font-size: var(--text-5xl);
  line-height: var(--tw-leading, var(--text-5xl--line-height));
}
.font-black {
  --tw-font-weight: var(--font-weight-black);
  font-weight: var(--font-weight-black);
}
.font-bold {
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}
.font-medium {
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
}
.font-thin {
  --tw-font-weight: var(--font-weight-thin);
  font-weight: var(--font-weight-thin);
}
.text-blue-500 {
  color: var(--color-blue-500);
}
.text-green-300 {
  color: var(--color-green-300);
}
.text-green-400 {
  color: var(--color-green-400);
}
.text-indigo-400 {
  color: var(--color-indigo-400);
}
.text-indigo-500 {
  color: var(--color-indigo-500);
}
.text-red-400 {
  color: var(--color-red-400);
}
.text-white {
  color: var(--color-white);
}
.underline {
  text-decoration-line: underline;
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.hover\:bg-black {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-black);
    }
  }
}
.hover\:bg-blue-400 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-blue-400);
    }
  }
}
.hover\:text-black {
  &:hover {
    @media (hover: hover) {
      color: var(--color-black);
    }
  }
}
.hover\:shadow-2xl {
  &:hover {
    @media (hover: hover) {
      --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.hover\:shadow-2xs {
  &:hover {
    @media (hover: hover) {
      --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.hover\:shadow-gray-400 {
  &:hover {
    @media (hover: hover) {
      --tw-shadow-color: oklch(70.7% 0.022 261.325);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-gray-400) var(--tw-shadow-alpha), transparent);
      }
    }
  }
}
.hover\:shadow-gray-500 {
  &:hover {
    @media (hover: hover) {
      --tw-shadow-color: oklch(55.1% 0.027 264.364);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-gray-500) var(--tw-shadow-alpha), transparent);
      }
    }
  }
}
.sm\:mx-32 {
  @media (width >= 40rem) {
    margin-inline: calc(var(--spacing) * 32);
  }
}
.sm\:gap-5 {
  @media (width >= 40rem) {
    gap: calc(var(--spacing) * 5);
  }
}
.sm\:gap-10 {
  @media (width >= 40rem) {
    gap: calc(var(--spacing) * 10);
  }
}
.sm\:gap-12 {
  @media (width >= 40rem) {
    gap: calc(var(--spacing) * 12);
  }
}
.sm\:p-10 {
  @media (width >= 40rem) {
    padding: calc(var(--spacing) * 10);
  }
}
.sm\:py-10 {
  @media (width >= 40rem) {
    padding-block: calc(var(--spacing) * 10);
  }
}
.md\:mx-10 {
  @media (width >= 48rem) {
    margin-inline: calc(var(--spacing) * 10);
  }
}
.md\:block {
  @media (width >= 48rem) {
    display: block;
  }
}
.md\:flex {
  @media (width >= 48rem) {
    display: flex;
  }
}
.md\:hidden {
  @media (width >= 48rem) {
    display: none;
  }
}
.md\:w-1\/2 {
  @media (width >= 48rem) {
    width: calc(1/2 * 100%);
  }
}
.md\:w-1\/3 {
  @media (width >= 48rem) {
    width: calc(1/3 * 100%);
  }
}
.md\:grid-cols-3 {
  @media (width >= 48rem) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
.md\:flex-row {
  @media (width >= 48rem) {
    flex-direction: row;
  }
}
.md\:pt-32 {
  @media (width >= 48rem) {
    padding-top: calc(var(--spacing) * 32);
  }
}
.lg\:grid-cols-3 {
  @media (width >= 64rem) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-indigo-50: oklch(96.2% 0.018 272.314);
    --color-indigo-300: oklch(78.5% 0.115 274.713);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --radius-2xl: 1rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
